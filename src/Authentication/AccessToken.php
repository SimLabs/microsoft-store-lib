<?php

namespace MicrosoftStoreLib\Authentication;

use Symfony\Component\Serializer\Annotation\SerializedName;
use Symfony\Component\Serializer\Annotation\Ignore;

/// <summary>
/// Access tokens are generated by your service and either used as the Authorization
/// header for calls to the Microsoft.Store services, or sent to the client to
/// generate a UserStoreId.  The specified Audience of the access token will
/// determine what it is used for:
/// Service Access Token -     https://onestore.microsoft.com - Used as the bearer token
///                            in the Authorization header of service-to-service calls.
/// Purchase Access Token -    https://onestore.microsoft.com/b2b/keys/create/purchase
///                            Sent to the client to generate a UserPurchaseId
/// Collections Access Token - https://onestore.microsoft.com/b2b/keys/create/collections
///                            Sent to the client to generate a UserCollectionsId
/// </summary>
class AccessToken
{
    /// <summary>
    /// Lifetime of the token in seconds from when it was created
    /// </summary>
    /**
     * @SerializedName("expires_in")
     */
    private $expiresIn;

    public function getExpiresIn()
    {
        return $this->expiresIn;
    }

    /// <summary>
    /// The UTC date and time when the Access Token expires
    /// </summary>
    /**
     * @Ignore
     */
    public \DateTime $expiresOn;

    public function setExpiresIn($value)
    {
        $this->expiresIn = $value;
        $this->expiresOn = (new \DateTime("now"))->add(new \DateInterval("PT" . $value . "S"));
    }

    /// <summary>
    /// Audience URI tied to the token which determines its type and which Microsoft Store Service it can be used with.
    /// With the Azure AD URI 1.0 this was returned in the result, with 2.0 it is not and needs to be set manually.
    /// </summary>
    /**
     * @SerializedName("resource")
     */
    public $Audience;

    /// <summary>
    /// Actual token to be used in calling the services or obtaining User Store Ids
    /// </summary>
    /**
     * @SerializedName("access_token")
     */
    public string $Token;
}
